<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pg_small</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp = 0
hsp = 0
dim="small"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>kLeft = keyboard_check(vk_left)
kRight = keyboard_check(vk_right)
kUp = keyboard_check(vk_up)
kJump = keyboard_check(ord("X"))

if place_meeting(x,y,obj_sea) {
    movespeed = 2
    grav = 0.3
    jumpspeed = 3
} else {
    movespeed = 4
    grav = 0.7
    jumpspeed = 6
}

if dim!="small" {
    jumpspeed = 4.5
}

move = -kLeft + kRight
hsp = move * movespeed

if (vsp&lt;10) vsp += grav

if (place_meeting(x, y+1, obj_solid) || (place_meeting(x,y+1,obj_sea_surface) &amp;&amp; dim=="small")) {
    vsp = kJump * -jumpspeed
    var obj = instance_place(x, y+1, obj_button_medium)
    if obj != noone {
        with(obj) {
            if obj_small.dim=="medium" {
                image_yscale=0.5
                obj_door_medium.open=true
            }
        }
    }
    var obj = instance_place(x, y+1, obj_button_small)
    if obj != noone {
        with(obj) {
            image_yscale=0.5
            obj_door_medium.open=true
        }
    }
}

if (place_meeting(x, y+1, obj_bubble)) {
    if dim=="small" {
        vsp = -jumpspeed
    }
    var bubble = instance_place(x, y+1, obj_bubble)
    with bubble {
        vsp = 0
        instance_destroy()
    }
}

//WallJump

if kRight &amp;&amp; kJump &amp;&amp; dim=="small" {

    if (place_meeting(x-1,y,obj_solid) &amp;&amp; (!place_meeting(x,y+1,obj_solid)) &amp;&amp; (!(kLeft))) {
        vsp = -jumpspeed*0.6
    }
}

if kLeft &amp;&amp; kJump &amp;&amp; dim=="small" {
    if (place_meeting(x+1,y,obj_solid) &amp;&amp; (!place_meeting(x,y+1,obj_solid)) &amp;&amp; (!kRight)) {
        vsp = -jumpspeed*0.6
    }
}

//End WallJump

src_push()

scr_move(hsp,vsp)

//Finish level
if (place_meeting(x, y, obj_door_medium)) &amp;&amp; kUp &amp;&amp; dim!="small" {
    var door = instance_place(x, y, obj_door_medium)
    with (door) {
        if open==true {
            instance_create(x,y,obj_fade)
        }
    }
}

if (place_meeting(x, y, obj_hamburger)){
    var burger = instance_place(x, y, obj_hamburger)
    sprite_index = spr_pg_medium
    effect_create_below(ef_ellipse, x, y, choose(0, 1, 2), c_white)
    dim="medium"
    with (burger) {
        instance_destroy()
    }
    
}

if place_meeting(x,y,obj_solid) {
    for (i=0;i&lt;1000; i++) {
        if !place_meeting(x, y-i, obj_solid) {
            y -=i
            break;
        }
        
        if !place_meeting(x, y+i, obj_solid) {
            y +=i
            break;
        }
    
        if !place_meeting(x-i, y, obj_solid) {
            x -=i
            break;
        }
    
        if !place_meeting(x+i, y, obj_solid) {
            x +=i
            break;
        }
        
        if !place_meeting(x+i, y+i, obj_solid) {
            x +=i
            y +=i
            break;
        }
        
        if !place_meeting(x-i, y-i, obj_solid) {
            x -=i
            y -=i
            break;
        }

        if !place_meeting(x+i, y-i, obj_solid) {
            x +=i
            y -=i
            break;
        }
        
        if !place_meeting(x-i, y+i, obj_solid) {
            x -=i
            y +=i
            break;
        }
        
        
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
